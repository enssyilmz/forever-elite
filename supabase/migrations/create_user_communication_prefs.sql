-- Create the user_communication_preferences table
CREATE TABLE public.user_communication_preferences (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id uuid NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,
    phone_notifications boolean DEFAULT false,
    email_notifications boolean DEFAULT false,
    sms_notifications boolean DEFAULT false,
    created_at timestamp with time zone DEFAULT now() NOT NULL,
    updated_at timestamp with time zone DEFAULT now() NOT NULL,
    CONSTRAINT user_communication_preferences_user_id_key UNIQUE (user_id)
);

-- Add comments for clarity
COMMENT ON TABLE public.user_communication_preferences IS 'Stores user communication preferences.';

-- Enable Row Level Security (RLS)
ALTER TABLE public.user_communication_preferences ENABLE ROW LEVEL SECURITY;

-- Policy: Allow users to view their own preferences
CREATE POLICY "Enable read for users based on user_id" ON public.user_communication_preferences
    FOR SELECT USING (auth.uid() = user_id);

-- Policy: Allow users to insert their own preferences
CREATE POLICY "Enable insert for users based on user_id" ON public.user_communication_preferences
    FOR INSERT WITH CHECK (auth.uid() = user_id);

-- Policy: Allow users to update their own preferences
CREATE POLICY "Enable update for users based on user_id" ON public.user_communication_preferences
    FOR UPDATE USING (auth.uid() = user_id)
    WITH CHECK (auth.uid() = user_id);

-- Create an index for better performance
CREATE INDEX idx_user_communication_preferences_user_id ON public.user_communication_preferences(user_id);

-- Trigger for updating updated_at timestamp
CREATE TRIGGER update_user_communication_preferences_updated_at 
    BEFORE UPDATE ON public.user_communication_preferences 
    FOR EACH ROW 
    EXECUTE FUNCTION update_updated_at_column(); 